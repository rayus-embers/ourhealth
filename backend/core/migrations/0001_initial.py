# Generated by Django 4.2.14 on 2024-07-28 18:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.BooleanField()),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MedPerson',
            fields=[
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('job', models.CharField(choices=[('Physician', 'Physician'), ('Nurse', 'Nurse'), ('Dentist', 'Dentist')], max_length=50)),
                ('isStudent', models.BooleanField()),
                ('spec', models.CharField(choices=[('none', 'none'), ('Allergist/Immunologist', 'Allergist/Immunologist'), ('Anesthesiologist', 'Anesthesiologist'), ('Cardiologist', 'Cardiologist'), ('Colon and Rectal Surgeon', 'Colon and Rectal Surgeon'), ('Critical Care', 'Critical Care'), ('Dermatologist', 'Dermatologist'), ('Endocrinologist', 'Endocrinologist'), ('Emergency Medicine', 'Emergency Medicine'), ('Family Physician', 'Family Physician'), ('Geriatric Medicine', 'Geriatric Medicine'), ('Hematologist', 'Hematologist'), ('Hospice and Palliative Medicine', 'Hospice and Palliative Medicine'), ('Infectious Disease', 'Infectious Disease'), ('Internist', 'Internist'), ('Medical Geneticist', 'Medical Geneticist'), ('Nephrologist', 'Nephrologist'), ('Neurologist', 'Neurologist'), ('Obstetrician', 'Obstetrician'), ('Gynecologist', 'Gynecologist'), ('Oncologist', 'Oncologist'), ('Ophthalmologist', 'Ophthalmologist'), ('Osteopath', 'Osteopath'), ('Otolaryngologist', 'Otolaryngologist'), ('Pathologist', 'Pathologist'), ('Pediatrician', 'Pediatrician'), ('Physiatrist', 'Physiatrist'), ('Plastic Surgeon', 'Plastic Surgeon'), ('Podiatrist', 'Podiatrist'), ('Preventive Medicine', 'Preventive Medicine'), ('Psychiatrist', 'Psychiatrist'), ('Pulmonologist', 'Pulmonologist'), ('Radiologist', 'Radiologist'), ('Rheumatologist', 'Rheumatologist'), ('Sleep Medicine', 'Sleep Medicine'), ('Sports Medicine', 'Sports Medicine'), ('General Surgeon', 'General Surgeon'), ('Urologist', 'Urologist')], max_length=100)),
                ('bio', models.CharField(max_length=500)),
                ('points', models.BigIntegerField(default=0)),
                ('user_avatar', models.ImageField(blank=True, upload_to='profile_pics')),
            ],
        ),
    ]
